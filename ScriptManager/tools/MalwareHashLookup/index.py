import os

import requests


def save_results_to_file(base_name, results):
    results_dir = "results"
    os.makedirs(results_dir, exist_ok=True)

    count = 0
    while True:
        filename = f"{base_name}{count}.txt" if count > 0 else f"{base_name}.txt"
        filepath = os.path.join(results_dir, filename)
        if not os.path.exists(filepath):
            break
        count += 1

    try:
        with open(filepath, 'a') as f:
            for result in results:
                f.write(result + '\n')
        print(f"Results saved in {filepath}")
    except Exception as e:
        print(f"Error writing file: {e}")


def malware_hash_lookup():
    print("Malware Hash Lookup Tool")
    print("You need a VirusTotal API key to use this tool.")
    api_key = input("Enter your VirusTotal API key: ")
    hash_value = input("Enter the MD5 or SHA256 hash to check: ")

    url = f"https://www.virustotal.com/vtapi/v2/file/report"
    params = {'apikey': api_key, 'resource': hash_value}

    try:
        response = requests.get(url, params=params)
        data = response.json()

        results = []
        if data['response_code'] == 1:
            positives = data['positives']
            total = data['total']
            result_str = f"Hash {hash_value}: Detected as malware by {positives} out of {total} sources."
            print(result_str)
            results.append(result_str)
        else:
            result_str = f"Hash {hash_value} not found in VirusTotal."
            print(result_str)
            results.append(result_str)

        # Salva i risultati in un file
        save_results_to_file("malware_hash_lookup_results", results)
    except Exception as e:
        result_str = f"Error: {e}"
        print(result_str)
        save_results_to_file("malware_hash_lookup_error", [result_str])


malware_hash_lookup()
