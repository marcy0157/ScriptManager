import socket
import struct
import os


def save_results_to_file(base_name, results):
    results_dir = "results"
    os.makedirs(results_dir, exist_ok=True)
    count = 0
    while True:
        filename = f"{base_name}{count}.txt" if count > 0 else f"{base_name}.txt"
        filepath = os.path.join(results_dir, filename)
        if not os.path.exists(filepath):
            break
        count += 1
    try:
        with open(filepath, 'a') as f:
            for result in results:
                f.write(result + '\n')
        print(f"Results saved in {filepath}")
    except Exception as e:
        print(f"Error writing file: {e}")


def smbghost_scanner():
    print("SMB Ghost Vulnerability Scanner (CVE-2020-0796)")
    target_ip = input("Enter the target IP: ")

    try:
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.settimeout(2)
        sock.connect((target_ip, 445))

        smb_neg_packet = b'\x00\x00\x00\x90\xfeSMB@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'

        sock.send(smb_neg_packet)
        response = sock.recv(1024)
        if response[4] == 0x03:  # SMB3
            result_str = f"Target {target_ip} is vulnerable to SMBGhost (SMBv3)."
            print(result_str)
            save_results_to_file("smbghost_results", [result_str])
        else:
            result_str = f"Target {target_ip} is not vulnerable to SMBGhost."
            print(result_str)
            save_results_to_file("smbghost_results", [result_str])
    except Exception as e:
        result_str = f"Error: {e}"
        print(result_str)
        save_results_to_file("smbghost_error", [result_str])


smbghost_scanner()
